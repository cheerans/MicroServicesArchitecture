docker-swarm concept
--------------------
https://rominirani.com/docker-swarm-tutorial-b67470cf8872

# we can use a docker machine to create a 
docker-machine create --driver virtualbox ml_manager
docker-machine create --driver virtualbox ml_worker1
docker-machine create --driver virtualbox ml_worker2

docker-machine ls

#Swarm initialized as below: current node <node ID> is now a manager.
docker-machine ssh ml_manager 

# Get the manager IP Address (******* Each machine runs ona  diff IP)
docker-machine ip ml_manager

# let us say we got 192.98.78.256

#Always run docker swarm init and docker swarm join with port 2377
docker swarm init --advertise-addr 192.98.78.256:2377 

#get token for manager
docker swarm join-token --rotate manager


# Now we will make all the othre machines Join the manager node, 
# By quoting its IP address and port and providing the token created as auth

docker swarm join --token TOKEN_FROM_ABOVE 192.98.78.256:2377

#get token for manager
docker swarm join-token --rotate worker

docker swarm join --token TOKEN_FROM_ABOVE 192.98.78.256:2377

# export MANAGER_TOKEN=`docker-machine ssh ml_manager "docker swarm join-token manager -q"`
# export WORKER_TOKEN=`docker-machine ssh ml_manager "docker swarm join-token worker -q"`

docker node ls
docker info ml_manager

# Is equuialent of docker run

# This operation is done on the manager ... but it affects all the swarm nodes too
docker service create --replicas 5 -p 80:80 --name web nginx


# This operation is done on the manager ... but it affects all the swarm nodes too
# This will scale from 5 to 8. But all of them together willl have 8 instances, so 3 on first, 4 on second, 1 on third
docker service scale web=8

# CLEAR ... HOW SWARM WORKS ???

docker service ls

# get updates
docker service update --image <imagename>:<version> web

# remove service
docker service rm web


# to deploy the app on the cloud hosted swarm
# Open docker compose and see, it has services listed
# it runs on swarm created already
# DEPLOY ON THE MANAGER NODE IS THE TRICK; IT DEPLOYS ON ALL
docker stack deploy -c docker-compose.yml ml_cloud_stack 


# Prometheus can be used to pull the stats
https://docs.docker.com/config/daemon/prometheus/
