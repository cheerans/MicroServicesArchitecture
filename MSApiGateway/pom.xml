<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>MLMicroService</groupId>
	<artifactId>msapi-gateway</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>
	<name>msapigateway</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>com.ml.client.ApiZUULGateway</start-class>
		<docker.image.prefix>scheerandockercoderepo</docker.image.prefix>
	</properties>
	<parent>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-parent</artifactId>
	    <version>2.0.1.RELEASE</version>
	</parent>	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
			</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-ribbon</artifactId>
			<version>1.4.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zuul</artifactId>
			<version>1.4.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>	
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix</artifactId>
			<version>1.4.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix-dashboard</artifactId>
			<version>1.4.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.retry</groupId>
		    <artifactId>spring-retry</artifactId>
	    	</dependency>			
	</dependencies>
	<dependencyManagement>
	    <dependencies>
	        <dependency>
	            <groupId>org.springframework.cloud</groupId>
	            <artifactId>spring-cloud-dependencies</artifactId>
	            <version>Finchley.RELEASE</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
	    </dependencies>
	</dependencyManagement>	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
				</plugin>
<!-- 				<plugin> -->
<!-- 					<groupId>com.spotify</groupId> -->
<!-- 					<artifactId>docker-maven-plugin</artifactId> -->
<!-- 					<version>0.3.7</version> -->
<!-- 					<configuration> -->
<!-- 						<repository>${docker.image.prefix}/${project.artifactId}/</repository> -->
<!-- 						<imageName>${project.artifactId}:${project.version}</imageName> -->
<!-- 						<dockerDirectory>${project.build.directory}</dockerDirectory> -->
<!-- 						<imageTags> -->
<!-- 							<imageTag>${project.version}</imageTag> -->
<!-- 						</imageTags> -->
<!-- 						<forceTags>true</forceTags> -->
<!-- 						<resources> -->
<!-- 							<resource> -->
<!-- 								<directory>${project.build.directory}</directory> -->
<!-- 								<include>${project.build.finalName}.jar</include> -->
<!-- 							</resource> -->
<!-- 						</resources> -->
<!-- 						<authConfig> -->
<!-- 							<username>santhoshcheeran</username> -->
<!-- 							<password>enter pwd here</password> -->
<!-- 						</authConfig> -->
<!-- 						<serverId>docker-hub</serverId> -->
<!-- 						<pushImage>true</pushImage>					 -->
<!-- 					</configuration> -->
<!-- 					<executions> -->
<!-- 						<execution> -->
<!-- 							<id>build-image</id> -->
<!-- 							<phase>package</phase> -->
<!-- 							<goals> -->
<!-- 								<goal>build</goal> -->
<!-- 							</goals> -->
<!-- 						</execution>							 -->
<!-- 					</executions>					 -->
<!-- 				</plugin>			 -->	
		</plugins>	
	</build>
</project>
